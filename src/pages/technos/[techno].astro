---
// This page displays links to all sessions that are tagged with a specific techno.

import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import SessionLink from '../../components/SessionLink.astro';

// This function generates the static paths for your Astro pages based on technos.
export async function getStaticPaths() {
  // Get all sessions by globbing the sessions directory for markdown files.
  const allSessions = await getCollection('sessions');
  const allTracks = await getCollection('technos');

  // Return an array of objects, each containing a techno and the sessions associated with that techno.
  return allTracks.map((technoEntry) => {
    // Filter the sessions for those that include the current techno.
    const filteredSessions = allSessions.filter((session) =>
      session.data.technos
        .map((techno) => techno.slug)
        .includes(technoEntry.slug)
    );

    // Return an object with the techno as a parameter and the filtered sessions as a prop.
    return {
      params: { techno: technoEntry.slug },
      props: { technoEntry, sessions: filteredSessions },
    };
  });
}

// Extract the techno from the Astro params.
// const { techno } = Astro.params;

// Extract the sessions from the Astro props.
const { sessions, technoEntry } = Astro.props;

// Get the techno entry from the technos collection.
const { Content } = await technoEntry.render();
---

<BaseLayout title={technoEntry.data.label}>
  <h4>{technoEntry.data.title} techno</h4>
  <Content />

  <h5>Session list</h5>
  <ul>
    {
      sessions.map((session) => (
        <SessionLink
          url={`/sessions/${session.slug}/`}
          title={session.data.title}
        />
      ))
    }
  </ul>
</BaseLayout>
